{
  "/repository/React/": [
    {
      "text": "React",
      "items": [
        {
          "text": "React UI的构建",
          "link": "/repository/React/React UI的构建"
        },
        {
          "text": "什么是JSX",
          "link": "/repository/React/什么是JSX"
        },
        {
          "text": "React类组件生命周期及使用场景",
          "link": "/repository/React/React类组件生命周期及使用场景"
        },
        {
          "text": "函数组件模拟生命周期",
          "link": "/repository/React/函数组件模拟生命周期"
        },
        {
          "text": "虚拟DOM和DOM diff",
          "link": "/repository/React/虚拟DOM和DOM diff"
        },
        {
          "text": "Virtual DOM及key属性的作用",
          "link": "/repository/React/Virtual DOM及key属性的作用"
        },
        {
          "text": "React Hooks",
          "link": "/repository/React/React Hooks"
        },
        {
          "text": "React如何实现组件间通信",
          "link": "/repository/React/React如何实现组件间通信"
        },
        {
          "text": "受控组件与非受控组件",
          "link": "/repository/React/受控组件与非受控组件"
        },
        {
          "text": "React异步组件",
          "link": "/repository/React/React异步组件"
        },
        {
          "text": "什么是PureComponents？",
          "link": "/repository/React/什么是PureComponents"
        },
        {
          "text": "React Fiber",
          "link": "/repository/React/React Fiber"
        },
        {
          "text": "什么是高阶组件",
          "link": "/repository/React/什么是高阶组件"
        },
        {
          "text": "React Router",
          "link": "/repository/React/React Router"
        },
        {
          "text": "Redux",
          "link": "/repository/React/Redux"
        }
      ]
    }
  ],
  "/repository/StudyNotes/": [
    {
      "text": "学习笔记",
      "items": [
        {
          "text": "git",
          "collapsed": true,
          "items": [
            {
              "text": "git-config",
              "link": "/repository/StudyNotes/git/git-config"
            },
            {
              "text": "git-commit-standard",
              "link": "/repository/StudyNotes/git/git-commit-standard"
            },
            {
              "text": "git-cherry-pick",
              "link": "/repository/StudyNotes/git/git-cherry-pick"
            },
            {
              "text": "配置alias别名指令",
              "link": "/repository/StudyNotes/git/配置alias别名指令"
            }
          ]
        },
        {
          "text": "HTML",
          "link": "/repository/StudyNotes/HTML"
        },
        {
          "text": "CSS",
          "collapsed": true,
          "items": [
            {
              "text": "CSS基础",
              "link": "/repository/StudyNotes/CSS/CSS基础"
            },
            {
              "text": "两个盒模型",
              "link": "/repository/StudyNotes/CSS/两个盒模型"
            },
            {
              "text": "CSS选择器优先级",
              "link": "/repository/StudyNotes/CSS/CSS选择器优先级"
            },
            {
              "text": "CSS布局",
              "link": "/repository/StudyNotes/CSS/CSS布局"
            },
            {
              "text": "CSS定位",
              "link": "/repository/StudyNotes/CSS/CSS定位"
            },
            {
              "text": "CSS动画",
              "link": "/repository/StudyNotes/CSS/CSS动画"
            },
            {
              "text": "格式化上下文BFC",
              "link": "/repository/StudyNotes/CSS/格式化上下文BFC"
            },
            {
              "text": "实现垂直居中",
              "link": "/repository/StudyNotes/CSS/实现垂直居中"
            },
            {
              "text": "文本多行时打点",
              "link": "/repository/StudyNotes/CSS/文本多行时打点"
            },
            {
              "text": "CSS-clearfix消除浮动",
              "link": "/repository/StudyNotes/CSS/CSS-clearfix消除浮动"
            },
            {
              "text": "CSS_Display(显示)_与_Visibility（可见性）",
              "link": "/repository/StudyNotes/CSS/CSS_Display(显示)_与_Visibility（可见性）"
            },
            {
              "text": "CSS_中设置透明的方式及区别（opacity，transparent，rgba）",
              "link": "/repository/StudyNotes/CSS/CSS_中设置透明的方式及区别（opacity，transparent，rgba）"
            },
            {
              "text": "column-_",
              "link": "/repository/StudyNotes/CSS/column-_"
            },
            {
              "text": "缩放方案",
              "link": "/repository/StudyNotes/CSS/缩放方案"
            }
          ]
        },
        {
          "text": "JS",
          "collapsed": true,
          "items": [
            {
              "text": "JavaScript的历史",
              "link": "/repository/StudyNotes/JS/JavaScript的历史"
            },
            {
              "text": "JavaScript设计模式",
              "link": "/repository/StudyNotes/JS/JavaScript设计模式"
            },
            {
              "text": "浅析URL",
              "link": "/repository/StudyNotes/JS/浅析URL"
            },
            {
              "text": "浅析_MVC",
              "link": "/repository/StudyNotes/JS/浅析_MVC"
            },
            {
              "text": "MVC、MVVM的概念和区别",
              "link": "/repository/StudyNotes/JS/MVC、MVVM的概念和区别"
            },
            {
              "text": "jQuery设计思路",
              "link": "/repository/StudyNotes/JS/jQuery设计思路"
            },
            {
              "text": "JS数据类型和8个falsy值",
              "link": "/repository/StudyNotes/JS/JS数据类型和8个falsy值"
            },
            {
              "text": "JS对象基本用法",
              "link": "/repository/StudyNotes/JS/JS对象基本用法"
            },
            {
              "text": "DOM事件模型",
              "link": "/repository/StudyNotes/JS/DOM事件模型"
            },
            {
              "text": "事件委托",
              "link": "/repository/StudyNotes/JS/事件委托"
            },
            {
              "text": "运算符",
              "link": "/repository/StudyNotes/JS/运算符"
            },
            {
              "text": "扩展运算符",
              "link": "/repository/StudyNotes/JS/扩展运算符"
            },
            {
              "text": "进程和线程",
              "link": "/repository/StudyNotes/JS/进程和线程"
            },
            {
              "text": "栈和堆",
              "link": "/repository/StudyNotes/JS/栈和堆"
            },
            {
              "text": "JS原型",
              "link": "/repository/StudyNotes/JS/JS原型"
            },
            {
              "text": "原型的继承和Class的继承",
              "link": "/repository/StudyNotes/JS/原型的继承和Class的继承"
            },
            {
              "text": "Object相关方法",
              "link": "/repository/StudyNotes/JS/Object相关方法"
            },
            {
              "text": "Set和Map数据结构",
              "link": "/repository/StudyNotes/JS/Set和Map数据结构"
            },
            {
              "text": "Reflect",
              "link": "/repository/StudyNotes/JS/Reflect"
            },
            {
              "text": "call、apply、bind_的用法和this",
              "link": "/repository/StudyNotes/JS/call、apply、bind_的用法和this"
            },
            {
              "text": "JS函数",
              "link": "/repository/StudyNotes/JS/JS函数"
            },
            {
              "text": "JS_函数的执行时机",
              "link": "/repository/StudyNotes/JS/JS_函数的执行时机"
            },
            {
              "text": "函数柯里化",
              "link": "/repository/StudyNotes/JS/函数柯里化"
            },
            {
              "text": "浅拷贝和深拷贝",
              "link": "/repository/StudyNotes/JS/浅拷贝和深拷贝"
            },
            {
              "text": "闭包和立即执行函数",
              "link": "/repository/StudyNotes/JS/闭包和立即执行函数"
            },
            {
              "text": "JS数组",
              "link": "/repository/StudyNotes/JS/JS数组"
            },
            {
              "text": "JS常用循环遍历方法",
              "link": "/repository/StudyNotes/JS/JS常用循环遍历方法"
            },
            {
              "text": "数组拍平",
              "link": "/repository/StudyNotes/JS/数组拍平"
            },
            {
              "text": "树形数据处理",
              "link": "/repository/StudyNotes/JS/树形数据处理"
            },
            {
              "text": "计算数组元素重复个数",
              "link": "/repository/StudyNotes/JS/计算数组元素重复个数"
            },
            {
              "text": "Promise",
              "link": "/repository/StudyNotes/JS/Promise"
            },
            {
              "text": "async和await",
              "link": "/repository/StudyNotes/JS/async和await"
            },
            {
              "text": "typeof与instanceof",
              "link": "/repository/StudyNotes/JS/typeof与instanceof"
            },
            {
              "text": "JSON",
              "link": "/repository/StudyNotes/JS/JSON"
            },
            {
              "text": "变量的解构赋值",
              "link": "/repository/StudyNotes/JS/变量的解构赋值"
            },
            {
              "text": "JS下载实现",
              "link": "/repository/StudyNotes/JS/JS下载实现"
            },
            {
              "text": "防抖和节流",
              "link": "/repository/StudyNotes/JS/防抖和节流"
            },
            {
              "text": "虚拟DOM和DOM_diff",
              "link": "/repository/StudyNotes/JS/虚拟DOM和DOM_diff"
            },
            {
              "text": "宏任务与微任务",
              "link": "/repository/StudyNotes/JS/宏任务与微任务"
            },
            {
              "text": "Shadow DOM",
              "link": "/repository/StudyNotes/JS/Shadow DOM"
            },
            {
              "text": "TypeScript",
              "link": "/repository/StudyNotes/JS/TypeScript"
            },
            {
              "text": "AJAX",
              "link": "/repository/StudyNotes/JS/AJAX"
            },
            {
              "text": "Axios_异步请求",
              "link": "/repository/StudyNotes/JS/Axios_异步请求"
            }
          ]
        },
        {
          "text": "HTTP",
          "collapsed": true,
          "items": [
            {
              "text": "HTTP",
              "link": "/repository/StudyNotes/HTTP/HTTP"
            },
            {
              "text": "跨域",
              "link": "/repository/StudyNotes/HTTP/跨域"
            },
            {
              "text": "HTTP1.0、1.1、2.0、3.0协议的特性及区别",
              "link": "/repository/StudyNotes/HTTP/HTTP1.0、1.1、2.0、3.0协议的特性及区别"
            },
            {
              "text": "TCP",
              "link": "/repository/StudyNotes/HTTP/TCP"
            },
            {
              "text": "Websocket",
              "link": "/repository/StudyNotes/HTTP/WebSocket"
            },
            {
              "text": "SSE",
              "link": "/repository/StudyNotes/HTTP/SSE"
            }
          ]
        },
        {
          "text": "算法",
          "collapsed": true,
          "items": [
            {
              "text": "基础算法",
              "link": "/repository/StudyNotes/算法/基础算法"
            },
            {
              "text": "力扣刷题",
              "link": "/repository/StudyNotes/算法/力扣刷题"
            }
          ]
        },
        {
          "text": "工具类",
          "collapsed": true,
          "items": [
            {
              "text": "nvm",
              "link": "/repository/StudyNotes/工具类/nvm"
            },
            {
              "text": "nrm",
              "link": "/repository/StudyNotes/工具类/nrm"
            },
            {
              "text": "正则表达式",
              "link": "/repository/StudyNotes/工具类/正则表达式"
            }
          ]
        },
        {
          "text": "构建",
          "collapsed": true,
          "items": [
            {
              "text": "性能",
              "collapsed": true,
              "items": [
                {
                  "text": "Webpack",
                  "link": "/repository/StudyNotes/构建/性能/Webpack"
                },
                {
                  "text": "性能优化",
                  "link": "/repository/StudyNotes/构建/性能/性能优化"
                }
              ]
            }
          ]
        },
        {
          "text": "解决方法记录",
          "collapsed": true,
          "items": [
            {
              "text": "Echarts_toolbox_添加全屏",
              "link": "/repository/StudyNotes/解决方法记录/Echarts_toolbox_添加全屏"
            },
            {
              "text": "js图片网络地址转为文件流",
              "link": "/repository/StudyNotes/解决方法记录/js图片网络地址转为文件流"
            },
            {
              "text": "如何获取文本宽度",
              "link": "/repository/StudyNotes/解决方法记录/如何获取文本宽度"
            },
            {
              "text": "正则从字符串中截取出img标签、以及对应src地址",
              "link": "/repository/StudyNotes/解决方法记录/正则从字符串中截取出img标签、以及对应src地址"
            }
          ]
        }
      ]
    }
  ],
  "/repository/TypeScript/": [
    {
      "text": "TypeScript",
      "items": [
        {
          "text": "TS运行与调试",
          "link": "/repository/TypeScript/TS运行与调试"
        },
        {
          "text": "TypeScript数据类型",
          "link": "/repository/TypeScript/TypeScript数据类型"
        },
        {
          "text": "enum、type、interface",
          "link": "/repository/TypeScript/enum、type、interface"
        },
        {
          "text": "TypeScript并集和交集",
          "link": "/repository/TypeScript/TypeScript并集和交集"
        },
        {
          "text": "类型兼容与赋值",
          "link": "/repository/TypeScript/类型兼容与赋值"
        },
        {
          "text": "深入函数",
          "link": "/repository/TypeScript/深入函数"
        },
        {
          "text": "泛型",
          "link": "/repository/TypeScript/泛型"
        },
        {
          "text": "面向对象编程之原型",
          "link": "/repository/TypeScript/面向对象编程之原型"
        },
        {
          "text": "面向对象之类的TypeScript语法",
          "link": "/repository/TypeScript/面向对象之类的TypeScript语法"
        },
        {
          "text": "TypeScript全解之模块",
          "link": "/repository/TypeScript/TypeScript全解之模块"
        },
        {
          "text": "类型体操",
          "link": "/repository/TypeScript/类型体操"
        },
        {
          "text": "TypeScript_x_JSX_=_TSX",
          "link": "/repository/TypeScript/TypeScript_x_JSX_=_TSX"
        }
      ]
    }
  ],
  "/repository/Vue/": [
    {
      "text": "Vue",
      "items": [
        {
          "text": "Vue起手式",
          "link": "/repository/Vue/Vue起手式"
        },
        {
          "text": "Vue构造选项",
          "link": "/repository/Vue/Vue构造选项"
        },
        {
          "text": "深入响应式原理",
          "link": "/repository/Vue/深入响应式原理"
        },
        {
          "text": "computed和watch",
          "link": "/repository/Vue/computed和watch"
        },
        {
          "text": "Filter",
          "link": "/repository/Vue/Filter"
        },
        {
          "text": "Vue模板",
          "link": "/repository/Vue/Vue模板"
        },
        {
          "text": "Directive指令",
          "link": "/repository/Vue/Directive指令"
        },
        {
          "text": "Mixin和Extends",
          "link": "/repository/Vue/Mixin和Extends"
        },
        {
          "text": "Provide和inject",
          "link": "/repository/Vue/Provide和inject"
        },
        {
          "text": ".sync_修饰符",
          "link": "/repository/Vue/.sync_修饰符"
        },
        {
          "text": "v-model",
          "link": "/repository/Vue/v-model"
        },
        {
          "text": "Vue Router",
          "link": "/repository/Vue/Vue_Router"
        },
        {
          "text": "路由守卫",
          "link": "/repository/Vue/路由守卫"
        },
        {
          "text": "VueX",
          "link": "/repository/Vue/VueX"
        },
        {
          "text": "Vue-i18n",
          "link": "/repository/Vue/Vue-i18n"
        },
        {
          "text": "嵌套多选框",
          "link": "/repository/Vue/嵌套多选框"
        },
        {
          "text": "阻止element组件中的_el-input__的粘贴功能",
          "link": "/repository/Vue/阻止element组件中的_el-input__的粘贴功能"
        },
        {
          "text": "element_UI_表单验证",
          "link": "/repository/Vue/element_UI_表单验证"
        },
        {
          "text": "element_ui__el-table_流体高度自适应",
          "link": "/repository/Vue/element_ui__el-table_流体高度自适应"
        },
        {
          "text": "vue_文件流下载excel文件",
          "link": "/repository/Vue/vue_文件流下载excel文件"
        },
        {
          "text": "a标签url下载文件",
          "link": "/repository/Vue/a标签url下载文件"
        },
        {
          "text": "使用js-file-download下载文件流文件",
          "link": "/repository/Vue/使用js-file-download下载文件流文件"
        },
        {
          "text": "el-image-viewer",
          "link": "/repository/Vue/el-image-viewer"
        },
        {
          "text": "富文本vue-quill-editor",
          "link": "/repository/Vue/富文本vue-quill-editor"
        },
        {
          "text": "Vuex持久化存储之vuex-persist",
          "link": "/repository/Vue/Vuex持久化存储之vuex-persist"
        },
        {
          "text": "Vue3中ref、toRef、toRefs的区别",
          "link": "/repository/Vue/Vue3中ref、toRef、toRefs的区别"
        },
        {
          "text": "内容溢出打点组件",
          "link": "/repository/Vue/内容溢出打点组件"
        },
        {
          "text": "vue_如何实现粘贴复制功能",
          "link": "/repository/Vue/vue_如何实现粘贴复制功能"
        }
      ]
    }
  ],
  "/repository/你不知道的JavaScript/": [
    {
      "text": "你不知道的JavaScript",
      "items": [
        {
          "text": "作用域和闭包",
          "collapsed": true,
          "items": [
            {
              "text": "作用域是什么",
              "link": "/repository/你不知道的JavaScript/作用域和闭包/作用域是什么"
            },
            {
              "text": "词法作用域",
              "link": "/repository/你不知道的JavaScript/作用域和闭包/词法作用域"
            },
            {
              "text": "函数作用域和块级作用域",
              "link": "/repository/你不知道的JavaScript/作用域和闭包/函数作用域和块级作用域"
            },
            {
              "text": "提升",
              "link": "/repository/你不知道的JavaScript/作用域和闭包/提升"
            }
          ]
        },
        {
          "text": "this和对象原型",
          "collapsed": true,
          "items": [
            {
              "text": "关于this",
              "link": "/repository/你不知道的JavaScript/this和对象原型/关于this"
            }
          ]
        }
      ]
    }
  ],
  "/repository/山竹记账/": [
    {
      "text": "山竹记账",
      "items": [
        {
          "text": "开发环境",
          "link": "/repository/山竹记账/开发环境"
        },
        {
          "text": "文档撰写和排期",
          "link": "/repository/山竹记账/文档撰写和排期"
        },
        {
          "text": "前端",
          "collapsed": true,
          "items": [
            {
              "text": "搭建前端项目",
              "link": "/repository/山竹记账/前端/搭建前端项目"
            },
            {
              "text": "页面划分与布局",
              "link": "/repository/山竹记账/前端/页面划分与布局"
            },
            {
              "text": "组件封装与插槽",
              "link": "/repository/山竹记账/前端/组件封装与插槽"
            },
            {
              "text": "动画、SVG Sprite与滑动手势",
              "link": "/repository/山竹记账/前端/动画、SVG_Sprite与滑动手势"
            },
            {
              "text": "滑动重构",
              "link": "/repository/山竹记账/前端/滑动重构"
            },
            {
              "text": "业务与轮子的关系",
              "link": "/repository/山竹记账/前端/业务与轮子的关系"
            },
            {
              "text": "NavBar与Overlay组件",
              "link": "/repository/山竹记账/前端/NavBar与Overlay组件"
            },
            {
              "text": "使用v-model实现Tabs组件",
              "link": "/repository/山竹记账/前端/使用v-model实现Tabs组件"
            },
            {
              "text": "使用Vant UI制作数字按键",
              "link": "/repository/山竹记账/前端/使用Vant_UI制作数字按键"
            },
            {
              "text": "自定义表单组件",
              "link": "/repository/山竹记账/前端/自定义表单组件"
            },
            {
              "text": "表单验证",
              "link": "/repository/山竹记账/前端/表单验证"
            },
            {
              "text": "制作TagEdit和ItemList页面",
              "link": "/repository/山竹记账/前端/制作TagEdit和ItemList页面"
            },
            {
              "text": "封装弹出菜单、制作登陆页面",
              "link": "/repository/山竹记账/前端/封装弹出菜单、制作登陆页面"
            },
            {
              "text": "制作echarts图表",
              "link": "/repository/山竹记账/前端/制作echarts图表"
            }
          ]
        },
        {
          "text": "后端",
          "collapsed": true,
          "items": [
            {
              "text": "部署应用和文档",
              "link": "/repository/山竹记账/后端/部署应用和文档"
            },
            {
              "text": "创建后端项目",
              "link": "/repository/山竹记账/后端/创建后端项目"
            },
            {
              "text": "RESTful API",
              "link": "/repository/山竹记账/后端/RESTful_API"
            },
            {
              "text": "后端单元测试",
              "link": "/repository/山竹记账/后端/后端单元测试"
            },
            {
              "text": "网站部署",
              "link": "/repository/山竹记账/后端/网站部署"
            },
            {
              "text": "Rails密钥管理",
              "link": "/repository/山竹记账/后端/Rails密钥管理"
            },
            {
              "text": "使用Rail Mailer和QQ邮箱",
              "link": "/repository/山竹记账/后端/使用Rail_Mailer和QQ邮箱"
            },
            {
              "text": "测试驱动开发与API文档",
              "link": "/repository/山竹记账/后端/测试驱动开发与API文档"
            },
            {
              "text": "mock、order、enum",
              "link": "/repository/山竹记账/后端/mock、order、enum"
            },
            {
              "text": "JWT",
              "link": "/repository/山竹记账/后端/JWT"
            },
            {
              "text": "中间件与鉴权",
              "link": "/repository/山竹记账/后端/中间件与鉴权"
            },
            {
              "text": "JWT续期与Refresh Token",
              "link": "/repository/山竹记账/后端/JWT续期与Refresh_Token"
            },
            {
              "text": "快速实现后端接口",
              "link": "/repository/山竹记账/后端/快速实现后端接口"
            },
            {
              "text": "migration、自定义校验、ISO8601",
              "link": "/repository/山竹记账/后端/migration、自定义校验、ISO8601"
            },
            {
              "text": "统计数据分组",
              "link": "/repository/山竹记账/后端/统计数据分组"
            }
          ]
        },
        {
          "text": "前后端联调",
          "collapsed": true,
          "items": [
            {
              "text": "第一次前后端联调接口",
              "link": "/repository/山竹记账/前后端联调/第一次前后端联调接口"
            },
            {
              "text": "Axios封装",
              "link": "/repository/山竹记账/前后端联调/Axios封装"
            },
            {
              "text": "前后端再联调",
              "link": "/repository/山竹记账/前后端联调/前后端再联调"
            },
            {
              "text": "用户鉴权与路由守卫",
              "link": "/repository/山竹记账/前后端联调/用户鉴权与路由守卫"
            },
            {
              "text": "自制纯前端Mock系统",
              "link": "/repository/山竹记账/前后端联调/自制纯前端Mock系统"
            },
            {
              "text": "用Hooks封装业务逻辑",
              "link": "/repository/山竹记账/前后端联调/用_Hooks_封装业务逻辑"
            },
            {
              "text": "Ref与Reactive",
              "link": "/repository/山竹记账/前后端联调/Ref_与_Reactive"
            },
            {
              "text": "Axios实践之标签请求",
              "link": "/repository/山竹记账/前后端联调/Axios实践之标签请求"
            }
          ]
        },
        {
          "text": "React",
          "collapsed": true,
          "items": [
            {
              "text": "React项目搭建",
              "link": "/repository/山竹记账/React/React项目搭建"
            },
            {
              "text": "React Router 6",
              "link": "/repository/山竹记账/React/React_Router_6"
            },
            {
              "text": "Css in Js 的三种方法",
              "link": "/repository/山竹记账/React/Css_in_Js_的三种方法"
            },
            {
              "text": "创建欢迎页面",
              "link": "/repository/山竹记账/React/创建欢迎页面"
            },
            {
              "text": "创建useSwipe的Hooks",
              "link": "/repository/山竹记账/React/创建useSwipe的Hooks"
            },
            {
              "text": "引入Zustand.js",
              "link": "/repository/山竹记账/React/引入Zustand.js"
            },
            {
              "text": "数据请求与缓存失效之 SWR",
              "link": "/repository/山竹记账/React/数据请求与缓存失效之_SWR"
            },
            {
              "text": "搭建Mock、封装Axios、使用SWR",
              "link": "/repository/山竹记账/React/搭建_Mock、封装_Axios、使用_SWR"
            },
            {
              "text": "封装loading和AddButton",
              "link": "/repository/山竹记账/React/封装loading和AddButton"
            },
            {
              "text": "用Grid布局制作列表页",
              "link": "/repository/山竹记账/React/用Grid布局制作列表页"
            },
            {
              "text": "两种组件间的通信方式",
              "link": "/repository/山竹记账/React/两种组件间的通信方式"
            },
            {
              "text": "滑动菜单",
              "link": "/repository/山竹记账/React/滑动菜单"
            },
            {
              "text": "无限加载列表",
              "link": "/repository/山竹记账/React/无限加载列表"
            },
            {
              "text": "登录页面-表单与数据校验",
              "link": "/repository/山竹记账/React/登录页面_表单与数据校验"
            },
            {
              "text": "修复手机上的bug",
              "link": "/repository/山竹记账/React/修复手机上的bug"
            },
            {
              "text": "Grid + Flex布局实战",
              "link": "/repository/山竹记账/React/Grid_+_Flex布局实战"
            }
          ]
        }
      ]
    }
  ],
  "/repository/面试题/": [
    {
      "text": "面试题",
      "items": [
        {
          "text": "HTML",
          "link": "/repository/面试题/HTML"
        },
        {
          "text": "CSS",
          "link": "/repository/面试题/CSS"
        },
        {
          "text": "JS",
          "collapsed": true,
          "items": [
            {
              "text": "JS基本数据类型",
              "link": "/repository/面试题/JS/JS基本数据类型"
            },
            {
              "text": "8个falsy值",
              "link": "/repository/面试题/JS/8个falsy值"
            },
            {
              "text": "原型链",
              "link": "/repository/面试题/JS/原型链"
            },
            {
              "text": "关于this",
              "link": "/repository/面试题/JS/关于this"
            },
            {
              "text": "JS的new做了什么",
              "link": "/repository/面试题/JS/JS的new做了什么"
            },
            {
              "text": "JS的立即执行函数是什么",
              "link": "/repository/面试题/JS/JS的立即执行函数是什么"
            },
            {
              "text": "JS的闭包是什么，怎么用",
              "link": "/repository/面试题/JS/JS的闭包是什么，怎么用"
            },
            {
              "text": "手写节流防抖",
              "link": "/repository/面试题/JS/手写节流防抖"
            },
            {
              "text": "JS如何实现类",
              "link": "/repository/面试题/JS/JS如何实现类"
            },
            {
              "text": "JS如何实现继承",
              "link": "/repository/面试题/JS/JS如何实现继承"
            },
            {
              "text": "手写AJAX",
              "link": "/repository/面试题/JS/手写AJAX"
            },
            {
              "text": "Promise",
              "link": "/repository/面试题/JS/Promise"
            },
            {
              "text": "async和await",
              "link": "/repository/面试题/JS/async和await"
            },
            {
              "text": "手写发布订阅",
              "link": "/repository/面试题/JS/手写发布订阅"
            },
            {
              "text": "手写深拷贝",
              "link": "/repository/面试题/JS/手写深拷贝"
            },
            {
              "text": "数组去重",
              "link": "/repository/面试题/JS/数组去重"
            },
            {
              "text": "输入url后页面渲染流程",
              "link": "/repository/面试题/JS/输入url后页面渲染流程"
            }
          ]
        },
        {
          "text": "TypeScript",
          "link": "/repository/面试题/TypeScript"
        },
        {
          "text": "Vue",
          "collapsed": true,
          "items": [
            {
              "text": "Vue2",
              "collapsed": true,
              "items": [
                {
                  "text": "Vue2是如何实现双向绑定的",
                  "link": "/repository/面试题/Vue/Vue2/Vue2是如何实现双向绑定的"
                },
                {
                  "text": "Vue2的声明周期有哪些，数据请求放在哪个钩子",
                  "link": "/repository/面试题/Vue/Vue2/Vue2的声明周期有哪些，数据请求放在哪个钩子"
                },
                {
                  "text": "Vue2组件通信方式",
                  "link": "/repository/面试题/Vue/Vue2/Vue2组件通信方式"
                },
                {
                  "text": "Vuex用过么，怎么理解",
                  "link": "/repository/面试题/Vue/Vue2/Vuex用过么，怎么理解"
                },
                {
                  "text": "VueRouter用过么，怎么理解",
                  "link": "/repository/面试题/Vue/Vue2/VueRouter用过么，怎么理解"
                }
              ]
            },
            {
              "text": "Vue3",
              "collapsed": true,
              "items": [
                {
                  "text": "Vue3为什么使用Composition API",
                  "link": "/repository/面试题/Vue/Vue3/Vue3为什么使用CompositionAPI"
                },
                {
                  "text": "Vue3为什么使用Proxy",
                  "link": "/repository/面试题/Vue/Vue3/Vue3为什么使用Proxy"
                },
                {
                  "text": "Vue3中defineModel如何使用",
                  "link": "/repository/面试题/Vue/Vue3/Vue3中defineModel如何使用"
                }
              ]
            },
            {
              "text": "Vue2v.sVue3",
              "collapsed": true,
              "items": [
                {
                  "text": "Object.defineProperty和Proxy的区别",
                  "link": "/repository/面试题/Vue/Vue2v.sVue3/Object.defineProperty和Proxy的区别"
                },
                {
                  "text": "Vue3对比Vue2做了哪些改动",
                  "link": "/repository/面试题/Vue/Vue2v.sVue3/Vue3对比Vue2做了哪些改动"
                }
              ]
            }
          ]
        },
        {
          "text": "React",
          "collapsed": true,
          "items": [
            {
              "text": "虚拟DOM和DOM_diff",
              "link": "/repository/面试题/React/虚拟DOM和DOM_diff"
            },
            {
              "text": "如何理解Redux",
              "link": "/repository/面试题/React/如何理解Redux"
            },
            {
              "text": "什么是高阶组件",
              "link": "/repository/面试题/React/什么是高阶组件"
            },
            {
              "text": "React有哪些生命周期钩子函数_数据请求放在哪个钩子里_",
              "link": "/repository/面试题/React/React有哪些生命周期钩子函数_数据请求放在哪个钩子里_"
            },
            {
              "text": "React体系学习路线",
              "link": "/repository/面试题/React/React体系学习路线"
            },
            {
              "text": "React_如何实现组件间通信",
              "link": "/repository/面试题/React/React_如何实现组件间通信"
            },
            {
              "text": "React_Hooks实现生命周期",
              "link": "/repository/面试题/React/React_Hooks实现生命周期"
            }
          ]
        },
        {
          "text": "Vue v.s React",
          "link": "/repository/面试题/Vue v.s React"
        },
        {
          "text": "HTTP",
          "collapsed": true,
          "items": [
            {
              "text": "GET和POST的区别有哪些",
              "link": "/repository/面试题/HTTP/GET和POST的区别有哪些"
            },
            {
              "text": "HTTP缓存有哪些方案",
              "link": "/repository/面试题/HTTP/HTTP缓存有哪些方案"
            },
            {
              "text": "HTTP和HTTPS的区别有哪些",
              "link": "/repository/面试题/HTTP/HTTP和HTTPS的区别有哪些"
            },
            {
              "text": "HTTP1.1和HTTP2的区别有哪些",
              "link": "/repository/面试题/HTTP/HTTP1.1和HTTP2的区别有哪些"
            },
            {
              "text": "TCP三次握手和四次挥手是什么",
              "link": "/repository/面试题/HTTP/TCP三次握手和四次挥手是什么"
            },
            {
              "text": "同源策略和跨域",
              "link": "/repository/面试题/HTTP/同源策略和跨域"
            },
            {
              "text": "Session、Cookie、LocalStorage、SessionStorage的区别",
              "link": "/repository/面试题/HTTP/Session、Cookie、LocalStorage、SessionStorage的区别"
            },
            {
              "text": "WebSocket",
              "link": "/repository/面试题/HTTP/WebSocket"
            },
            {
              "text": "SSE",
              "link": "/repository/面试题/HTTP/SSE"
            }
          ]
        },
        {
          "text": "工程化",
          "collapsed": true,
          "items": [
            {
              "text": "常见loader和plugin有哪些？两者的区别是什么？",
              "link": "/repository/面试题/工程化/常见loader和plugin有哪些，两者区别是什么"
            },
            {
              "text": "webpack如何解决开发时的跨域问题？",
              "link": "/repository/面试题/工程化/webpack如何解决开发时的跨域问题"
            },
            {
              "text": "如何实现tree-shaking",
              "link": "/repository/面试题/工程化/如何实现tree-shaking"
            },
            {
              "text": "如何提高webpack构建速度",
              "link": "/repository/面试题/工程化/如何提高webpack构建速度"
            },
            {
              "text": "webpack与vite的区别是什么？",
              "link": "/repository/面试题/工程化/webpack与vite的区别是什么"
            },
            {
              "text": "webpack怎么配置多页应用",
              "link": "/repository/面试题/工程化/webpack怎么配置多页应用"
            },
            {
              "text": "swc、esbuild是什么？",
              "link": "/repository/面试题/工程化/swc、esbuild是什么"
            },
            {
              "text": "微前端",
              "link": "/repository/面试题/工程化/微前端"
            }
          ]
        }
      ]
    }
  ]
}